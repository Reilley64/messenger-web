/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  MessageRequestRequestDto,
  MessageRequestResponseDto,
} from '../models/index';
import {
    MessageRequestRequestDtoFromJSON,
    MessageRequestRequestDtoToJSON,
    MessageRequestResponseDtoFromJSON,
    MessageRequestResponseDtoToJSON,
} from '../models/index';

export interface ApproveMessageRequestRequest {
    messageRequestId: string;
}

export interface CreateMessageRequestRequest {
    body: MessageRequestRequestDto;
}

export interface GetMessageRequestRequest {
    messageRequestId: string;
}

/**
 * 
 */
export class MessageRequestRestControllerApi extends runtime.BaseAPI {

    /**
     */
    async approveMessageRequestRaw(requestParameters: ApproveMessageRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MessageRequestResponseDto>> {
        if (requestParameters['messageRequestId'] == null) {
            throw new runtime.RequiredError(
                'messageRequestId',
                'Required parameter "messageRequestId" was null or undefined when calling approveMessageRequest().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/message-requests/{message_request_id}`.replace(`{${"message_request_id"}}`, encodeURIComponent(String(requestParameters['messageRequestId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MessageRequestResponseDtoFromJSON(jsonValue));
    }

    /**
     */
    async approveMessageRequest(requestParameters: ApproveMessageRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MessageRequestResponseDto> {
        const response = await this.approveMessageRequestRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async createMessageRequestRaw(requestParameters: CreateMessageRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MessageRequestResponseDto>> {
        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling createMessageRequest().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/message-requests`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MessageRequestRequestDtoToJSON(requestParameters['body']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MessageRequestResponseDtoFromJSON(jsonValue));
    }

    /**
     */
    async createMessageRequest(requestParameters: CreateMessageRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MessageRequestResponseDto> {
        const response = await this.createMessageRequestRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getMessageRequestRaw(requestParameters: GetMessageRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MessageRequestResponseDto>> {
        if (requestParameters['messageRequestId'] == null) {
            throw new runtime.RequiredError(
                'messageRequestId',
                'Required parameter "messageRequestId" was null or undefined when calling getMessageRequest().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // apiKey authentication
        }

        const response = await this.request({
            path: `/v1/message-requests/{message_request_id}`.replace(`{${"message_request_id"}}`, encodeURIComponent(String(requestParameters['messageRequestId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MessageRequestResponseDtoFromJSON(jsonValue));
    }

    /**
     */
    async getMessageRequest(requestParameters: GetMessageRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MessageRequestResponseDto> {
        const response = await this.getMessageRequestRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
